newerlist$values[209]
}
}
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character", na.strings=c("NA", "Not Available"))
## Check that state and outcome are valid
checkstate <- data[,7]
statevalid <- match(state, checkstate)
outcomes <- c("heart attack", "heart failure", "pneumonia")
outcomevalid <- match(outcome, outcomes)
heartattack <- as.numeric()
if(is.na(statevalid)) {
stop("invalid state");
} else if(is.na(outcomevalid)) {
stop("invalid outcome")
} else {
subregion <- subset(data, data$State==state)
heartvalues <- as.numeric(na.omit(subregion$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
newerlist <- list(name=subregion$Hospital.Name, values=heartvalues)
#min(newerlist$values)
#split(newerlist$name, min(newerlist$values))
#heartmin <- subregion$Hospital.Name[min(heartvalues)]
#elem <- match(min(newerlist$values), newerlist$values)
#newerlist$name[elem]
newerlist$values[208]
}
}
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character", na.strings=c("NA", "Not Available"))
## Check that state and outcome are valid
checkstate <- data[,7]
statevalid <- match(state, checkstate)
outcomes <- c("heart attack", "heart failure", "pneumonia")
outcomevalid <- match(outcome, outcomes)
heartattack <- as.numeric()
if(is.na(statevalid)) {
stop("invalid state");
} else if(is.na(outcomevalid)) {
stop("invalid outcome")
} else {
subregion <- subset(data, data$State==state)
heartvalues <- as.numeric(na.omit(subregion$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
newerlist <- list(name=subregion$Hospital.Name, values=heartvalues)
#min(newerlist$values)
#split(newerlist$name, min(newerlist$values))
#heartmin <- subregion$Hospital.Name[min(heartvalues)]
#elem <- match(min(newerlist$values), newerlist$values)
#newerlist$name[elem]
newerlist$values
}
}
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are valid
checkstate <- data[,7]
statevalid <- match(state, checkstate)
outcomes <- c("heart attack", "heart failure", "pneumonia")
outcomevalid <- match(outcome, outcomes)
heartattack <- as.numeric()
if(is.na(statevalid)) {
stop("invalid state");
} else if(is.na(outcomevalid)) {
stop("invalid outcome")
} else {
subregion <- subset(data, data$State==state)
heartvalues <- as.numeric(na.omit(subregion$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
newerlist <- list(name=subregion$Hospital.Name, values=heartvalues)
#min(newerlist$values)
#split(newerlist$name, min(newerlist$values))
#heartmin <- subregion$Hospital.Name[min(heartvalues)]
#elem <- match(min(newerlist$values), newerlist$values)
#newerlist$name[elem]
newerlist$values
}
}
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are valid
checkstate <- data[,7]
statevalid <- match(state, checkstate)
outcomes <- c("heart attack", "heart failure", "pneumonia")
outcomevalid <- match(outcome, outcomes)
heartattack <- as.numeric()
if(is.na(statevalid)) {
stop("invalid state");
} else if(is.na(outcomevalid)) {
stop("invalid outcome")
} else {
subregion <- subset(data, data$State==state)
heartvalues <- as.numeric(na.omit(subregion$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
newerlist <- list(name=subregion$Hospital.Name, values=heartvalues)
#min(newerlist$values)
#split(newerlist$name, min(newerlist$values))
#heartmin <- subregion$Hospital.Name[min(heartvalues)]
elem <- match(min(newerlist$values), newerlist$values)
newerlist$name[elem]
#newerlist$values
}
}
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are valid
checkstate <- data[,7]
statevalid <- match(state, checkstate)
outcomes <- c("heart attack", "heart failure", "pneumonia")
outcomevalid <- match(outcome, outcomes)
heartattack <- as.numeric()
if(is.na(statevalid)) {
stop("invalid state");
} else if(is.na(outcomevalid)) {
stop("invalid outcome")
} else {
subregion <- subset(data, data$State==state)
heartvalues <- as.numeric(na.omit(subregion$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
newerlist <- list(name=subregion$Hospital.Name, values=heartvalues)
#min(newerlist$values)
#split(newerlist$name, min(newerlist$values))
#heartmin <- subregion$Hospital.Name[min(heartvalues)]
elem <- match(min(newerlist$values), newerlist$values)
newerlist$name[210]
#newerlist$values
}
}
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are valid
checkstate <- data[,7]
statevalid <- match(state, checkstate)
outcomes <- c("heart attack", "heart failure", "pneumonia")
outcomevalid <- match(outcome, outcomes)
heartattack <- as.numeric()
if(is.na(statevalid)) {
stop("invalid state");
} else if(is.na(outcomevalid)) {
stop("invalid outcome")
} else {
subregion <- subset(data, data$State==state)
heartvalues <- as.numeric(na.omit(subregion$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
newerlist <- list(name=subregion$Hospital.Name, values=heartvalues)
#min(newerlist$values)
#split(newerlist$name, min(newerlist$values))
#heartmin <- subregion$Hospital.Name[min(heartvalues)]
elem <- match(min(newerlist$values), newerlist$values)
newerlist$values[210]
#newerlist$values
}
}
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are valid
checkstate <- data[,7]
statevalid <- match(state, checkstate)
outcomes <- c("heart attack", "heart failure", "pneumonia")
outcomevalid <- match(outcome, outcomes)
heartattack <- as.numeric()
if(is.na(statevalid)) {
stop("invalid state");
} else if(is.na(outcomevalid)) {
stop("invalid outcome")
} else {
subregion <- subset(data, data$State==state)
heartvalues <- as.numeric(na.omit(subregion$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
newerlist <- list(name=subregion$Hospital.Name, values=heartvalues)
#min(newerlist$values)
#split(newerlist$name, min(newerlist$values))
#heartmin <- subregion$Hospital.Name[min(heartvalues)]
elem <- match(min(newerlist$values), newerlist$values)
newerlist
#newerlist$values
}
}
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are valid
checkstate <- data[,7]
statevalid <- match(state, checkstate)
outcomes <- c("heart attack", "heart failure", "pneumonia")
outcomevalid <- match(outcome, outcomes)
heartattack <- as.numeric()
if(is.na(statevalid)) {
stop("invalid state");
} else if(is.na(outcomevalid)) {
stop("invalid outcome")
} else {
subregion <- subset(data, data$State==state)
heartvalues <- as.numeric(na.omit(subregion$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
newerlist <- list(name=subregion$Hospital.Name, values=heartvalues)
#min(newerlist$values)
#split(newerlist$name, min(newerlist$values))
#heartmin <- subregion$Hospital.Name[min(heartvalues)]
elem <- match(min(newerlist$values, na.rm=T), newerlist$values)
newerlist
#newerlist$values
}
}
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are valid
checkstate <- data[,7]
statevalid <- match(state, checkstate)
outcomes <- c("heart attack", "heart failure", "pneumonia")
outcomevalid <- match(outcome, outcomes)
heartattack <- as.numeric()
if(is.na(statevalid)) {
stop("invalid state");
} else if(is.na(outcomevalid)) {
stop("invalid outcome")
} else {
subregion <- subset(data, data$State==state)
heartvalues <- as.numeric(na.omit(subregion$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
newerlist <- list(name=subregion$Hospital.Name, values=heartvalues)
#min(newerlist$values)
#split(newerlist$name, min(newerlist$values))
#heartmin <- subregion$Hospital.Name[min(heartvalues)]
elem <- match(min(newerlist$values, na.rm=T), newerlist$values)
newerlist[210]
#newerlist$values
}
}
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are valid
checkstate <- data[,7]
statevalid <- match(state, checkstate)
outcomes <- c("heart attack", "heart failure", "pneumonia")
outcomevalid <- match(outcome, outcomes)
heartattack <- as.numeric()
if(is.na(statevalid)) {
stop("invalid state");
} else if(is.na(outcomevalid)) {
stop("invalid outcome")
} else {
subregion <- subset(data, data$State==state)
heartvalues <- as.numeric(na.omit(subregion$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
newerlist <- list(name=subregion$Hospital.Name, values=heartvalues)
#min(newerlist$values)
#split(newerlist$name, min(newerlist$values))
#heartmin <- subregion$Hospital.Name[min(heartvalues)]
elem <- match(min(newerlist$values, na.rm=T), newerlist$values)
newerlist$name[210]
#newerlist$values
}
}
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are valid
checkstate <- data[,7]
statevalid <- match(state, checkstate)
outcomes <- c("heart attack", "heart failure", "pneumonia")
outcomevalid <- match(outcome, outcomes)
heartattack <- as.numeric()
if(is.na(statevalid)) {
stop("invalid state");
} else if(is.na(outcomevalid)) {
stop("invalid outcome")
} else {
subregion <- subset(data, data$State==state)
heartvalues <- as.numeric(na.omit(subregion$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
newerlist <- list(name=subregion$Hospital.Name, values=heartvalues)
#min(newerlist$values)
#split(newerlist$name, min(newerlist$values))
#heartmin <- subregion$Hospital.Name[min(heartvalues)]
elem <- match(min(newerlist$values, na.rm=T), newerlist$values)
newerlist$values[210]
#newerlist$values
}
}
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are valid
checkstate <- data[,7]
statevalid <- match(state, checkstate)
outcomes <- c("heart attack", "heart failure", "pneumonia")
outcomevalid <- match(outcome, outcomes)
heartattack <- as.numeric()
if(is.na(statevalid)) {
stop("invalid state");
} else if(is.na(outcomevalid)) {
stop("invalid outcome")
} else {
subregion <- subset(data, data$State==state)
heartvalues <- as.numeric(na.omit(subregion$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
newerlist <- list(name=subregion$Hospital.Name, values=heartvalues)
#min(newerlist$values)
#split(newerlist$name, min(newerlist$values))
#heartmin <- subregion$Hospital.Name[min(heartvalues)]
elem <- match(min(newerlist$values, na.rm=T), newerlist$values)
newerlist$name[elem]
#newerlist$values
}
}
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are valid
checkstate <- data[,7]
statevalid <- match(state, checkstate)
outcomes <- c("heart attack", "heart failure", "pneumonia")
outcomevalid <- match(outcome, outcomes)
heartattack <- as.numeric()
if(is.na(statevalid)) {
stop("invalid state");
} else if(is.na(outcomevalid)) {
stop("invalid outcome")
} else {
subregion <- subset(data, data$State==state)
heartvalues <- as.numeric(na.omit(subregion$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
newerlist <- list(name=subregion$Hospital.Name, values=heartvalues)
#min(newerlist$values)
#split(newerlist$name, min(newerlist$values))
#heartmin <- subregion$Hospital.Name[min(heartvalues)]
elem <- match(min(newerlist$values, na.rm=T), newerlist$values)
newerlist$name[elem]
#newerlist$values
}
}
best("MD", "heart attack")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are valid
checkstate <- data[,7]
statevalid <- match(state, checkstate)
outcomes <- c("heart attack", "heart failure", "pneumonia")
outcomevalid <- match(outcome, outcomes)
heartattack <- as.numeric()
if(is.na(statevalid)) {
stop("invalid state");
} else if(is.na(outcomevalid)) {
stop("invalid outcome")
} else {
subregion <- subset(data, data$State==state)
heartvalues <- suppressWarnings(as.numeric(na.omit(subregion$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)))
newerlist <- list(name=subregion$Hospital.Name, values=heartvalues)
elem <- match(min(newerlist$values, na.rm=T), newerlist$values)
newerlist$name[elem]
}
}
best("MD", "heart attack")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are valid
checkstate <- data[,7]
statevalid <- match(state, checkstate)
outcomes <- c("heart attack", "heart failure", "pneumonia")
outcomevalid <- match(outcome, outcomes)
heartattack <- as.numeric()
if(is.na(statevalid)) {
stop("invalid state");
} else if(is.na(outcomevalid)) {
stop("invalid outcome")
} else {
subregion <- subset(data, data$State==state)
heartvalues <- suppressWarnings(as.numeric(na.omit(subregion$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)))
newerlist <- list(name=subregion$Hospital.Name, values=heartvalues)
elem <- match(min(newerlist$values, na.rm=T), newerlist$values)
newerlist$name[elem]
}
}
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are valid
checkstate <- data[,7]
statevalid <- match(state, checkstate)
outcomes <- c("heart attack", "heart failure", "pneumonia")
outcomevalid <- match(outcome, outcomes)
heartattack <- as.numeric()
if(is.na(statevalid)) {
stop("invalid state");
} else if(is.na(outcomevalid)) {
stop("invalid outcome")
} else {
subregion <- subset(data, data$State==state)
heartvalues <- suppressWarnings(as.numeric(na.omit(subregion$data[,11])))
newerlist <- list(name=subregion$Hospital.Name, values=heartvalues)
elem <- match(min(newerlist$values, na.rm=T), newerlist$values)
newerlist$name[elem]
}
}
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are valid
checkstate <- data[,7]
statevalid <- match(state, checkstate)
outcomes <- c("heart attack", "heart failure", "pneumonia")
outcomevalid <- match(outcome, outcomes)
heartattack <- as.numeric()
if(is.na(statevalid)) {
stop("invalid state");
} else if(is.na(outcomevalid)) {
stop("invalid outcome")
} else {
subregion <- subset(data, data$State==state)
if(outcomes == outcomes[1]) {
heartvalues <- suppressWarnings(as.numeric(na.omit(subregion$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)))
}
newerlist <- list(name=subregion$Hospital.Name, values=heartvalues)
elem <- match(min(newerlist$values, na.rm=T), newerlist$values)
newerlist$name[elem]
}
}
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are valid
checkstate <- data[,7]
statevalid <- match(state, checkstate)
outcomes <- c("heart attack", "heart failure", "pneumonia")
outcomevalid <- match(outcome, outcomes)
heartattack <- as.numeric()
if(is.na(statevalid)) {
stop("invalid state");
} else if(is.na(outcomevalid)) {
stop("invalid outcome")
} else {
subregion <- subset(data, data$State==state)
if(outcome == outcomes[1]) {
heartvalues <- suppressWarnings(as.numeric(na.omit(subregion$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)))
}
newerlist <- list(name=subregion$Hospital.Name, values=heartvalues)
elem <- match(min(newerlist$values, na.rm=T), newerlist$values)
newerlist$name[elem]
}
}
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are valid
checkstate <- data[,7]
statevalid <- match(state, checkstate)
outcomes <- c("heart attack", "heart failure", "pneumonia")
outcomevalid <- match(outcome, outcomes)
heartattack <- as.numeric()
if(is.na(statevalid)) {
stop("invalid state");
} else if(is.na(outcomevalid)) {
stop("invalid outcome")
} else {
subregion <- subset(data, data$State==state)
if(outcome == outcomes[1]) {
heartvalues <- suppressWarnings(as.numeric(na.omit(subregion$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)))
} else if(outcome == outcomes[2]) {
heartvalues <- suppressWarnings(as.numeric(na.omit(subregion$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)))
}
newerlist <- list(name=subregion$Hospital.Name, values=heartvalues)
elem <- match(min(newerlist$values, na.rm=T), newerlist$values)
newerlist$name[elem]
}
}
best("TX", "heart failure")
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Check that state and outcome are valid
checkstate <- data[,7]
statevalid <- match(state, checkstate)
outcomes <- c("heart attack", "heart failure", "pneumonia")
outcomevalid <- match(outcome, outcomes)
heartattack <- as.numeric()
if(is.na(statevalid)) {
stop("invalid state");
} else if(is.na(outcomevalid)) {
stop("invalid outcome")
} else {
subregion <- subset(data, data$State==state)
if(outcome == outcomes[1]) {
heartvalues <- suppressWarnings(as.numeric(na.omit(subregion$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)))
} else if(outcome == outcomes[2]) {
heartvalues <- suppressWarnings(as.numeric(na.omit(subregion$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)))
} else {
heartvalues <- suppressWarnings(as.numeric(na.omit(subregion$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)))
}
newerlist <- list(name=subregion$Hospital.Name, values=heartvalues)
elem <- match(min(newerlist$values, na.rm=T), newerlist$values)
newerlist$name[elem]
}
}
best("MD", "pneumonia")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
source("submitscript3.R")
