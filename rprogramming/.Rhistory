source('~/Documents/coursera/datasciencecoursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "nitrate", 70:72)
source('~/Documents/coursera/datasciencecoursera/rprogramming/pollutantmean.R')
source('~/Documents/coursera/datasciencecoursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "sulfate", 1:10)
source('~/Documents/coursera/datasciencecoursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "nitrate", 23)
source('~/Documents/coursera/datasciencecoursera/rprogramming/pollutantmean.R')
mean(c(sapply(selected.dfs, function(x) x[ ,pollutant])), na.rm=TRUE)
pollutantmean("specdata", "nitrate", 23)
source('~/Documents/coursera/datasciencecoursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "nitrate", 70:72)
source('~/Documents/coursera/datasciencecoursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "nitrate", 70:72)
source('~/Documents/coursera/datasciencecoursera/rprogramming/pollutantmean.R')
source('~/Documents/coursera/datasciencecoursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "nitrate", 70:72)
source('~/Documents/coursera/datasciencecoursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/Documents/coursera/datasciencecoursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/Documents/coursera/datasciencecoursera/rprogramming/pollutantmean.R')
source('~/Documents/coursera/datasciencecoursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/Documents/coursera/datasciencecoursera/rprogramming/pollutantmean.R')
source('~/Documents/coursera/datasciencecoursera/rprogramming/pollutantmean.R')
source('~/Documents/coursera/datasciencecoursera/rprogramming/pollutantmean.R')
source('~/Documents/coursera/datasciencecoursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/Documents/coursera/datasciencecoursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/Documents/coursera/datasciencecoursera/rprogramming/pollutantmean.R')
ozone
ozone
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
ozone
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
ozone$Ozone
ozone
ozone$month
ozone$Month
names(ozone)
getwd()
str(ozone)
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
head(ozone)
tail(ozone)
head(ozone, 2)
tail(ozone 2)
tail(ozone, 2)
str(ozone)
ozone$Ozone[47]
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
ozone
str(ozone)
lapply(ozone, typeof)
str(lapply(ozone, typeof))
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
lapply(ozone, calcMean)
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
lapply(ozone, calcMean)
str(ozone)
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
lapply(ozone, function(x){ if(is.numeric(x)) mean(x) })
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
ozone
ozone(complete.cases)
complete.cases(ozone)
ozone[complete.cases(ozone)]
ozone[complete.cases(ozone),]
ozone
lapply(ozone, function(x){ x[complete.cases(x),] })
lapply(ozone, function(x){ x[complete.cases(x),] })
lapply(ozone, function(x){ x[complete.cases(x),x] })
lapply(ozone$Ozone, function(x){ x[complete.cases(x),] })
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
ozoneClean
lapply(ozone, function(x){ ozone[complete.cases(ozone),] })
lapply(ozone$Ozone, function(x){ ozone[complete.cases(ozone),] })
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
mean(ozoneClean$Ozone)
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
ozoneClean
ozoneClean$Ozone
str(ozoneClean$Ozone)
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
ozoneClean$Ozone
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
str(ozoneClean)
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
ozone[ozoneClean]
ozone[[ozoneClean]]
ozone
ozone$Ozone
ozone$Ozone[is.na]
is.na(ozone$Ozone)
str(is.na(ozone$Ozone))
str(ozone[is.na(ozone$Ozone)])
data <- is.na(ozone$Ozone)
data
data[data == T]
str(data[data == T])
sum(data[data == T])
ozone
ozone$Ozone
lapply(ozone, function(x){ x$Ozone > 31 & x$Temp > 90 })
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
lapply(ozoneClean, function(x){ x$Ozone > 31 & x$Temp > 90 })
lapply(ozone, function(x){ x$Ozone > 31 & x$Temp > 90 })
is.recursive(ozone)
lapply(ozone, function(x){ x["Ozone"] > 31 & x["Temp"] > 90 })
lapply(ozoneClean, function(x){ x["Ozone"] > 31 & x["Temp"] > 90 })
lapply(ozone, function(x){ x$Ozone > 31 & x$Temp > 90 })
ozone$Ozone
ozone$Temp
lapply(ozone, function(x){ x$Temp > 90 })
lapply(ozone, function(x){ which(x$Temp > 90) })
holder <- lapply(ozone, function(x){ x$Temp > 90 })
which(lapply(ozone, function(x){ x$Temp > 90 }))
which(lapply(ozone, function(x){ x$Temp > 90 }) == T)
which(lapply(ozone, function(x){ x["Temp"] > 90 }))
which(lapply(ozone, function(x){ x["Temp"] > 90 }) == T)
temp <- ozone$Temp
ozoneNine <- ozone$Ozone
temp
ozoneNine
lapply(ozone, function(x) { temp > 90 })
lapply(ozone$Temp, function(x) { x > 90 })
which(lapply(ozone$Temp, function(x) { x > 90 }) == T)
tempAbove <- which(lapply(ozone$Temp, function(x) { x > 90 }) == T)
ozoneAbove <- which(lapply(ozone$Ozone, function(x) { x > 31 }) == T)
tempAbove
ozoneAbove
ozone$Solor.R
str(ozone)
ozone$Solar.R
which(lapply(ozone$Solor.R, function(x){ ozoneAbove & tempAbove }) == T)
lapply(ozone$Solor.R, function(x){ ozoneAbove & tempAbove })
subset(ozone, ozoneAbove & tempAbove)
subset(ozone, Ozone > 31 & Temp > 90)
calc <- subset(ozone, Ozone > 31 & Temp > 90)
mean(calc$Solar.R)
tempm <- subset(ozone, Month == 6)
mean(tempm$Temp)
maxo <- subset(ozone, Month == 5)
max(maxo$Ozone)
max(maxo$Ozone+1)
max(maxo$Ozone-1)
maxo <- subset(ozone, Month == 5)
maxo
lapply(ozone$Ozone, function(x){ max(subset(ozoneClean, Month == 5)) })
lapply(ozone$Ozone, function(x){ max(subset(ozone, Month == 5)) })
maxo
cleanozone <- subset(ozone, ozoneClean)
max(ozone, maxo)
max(ozoneClean, maxo)
notn <- !is.na(maxo)
notn
which(maxo == T)
mxo
maxo
ridna <- !is.na(maxo)
ridna
ridna <- !is.na(maxo == T)
ridna
ridna <- maxo[!is.na(maxo)]
rida
ridna
ridna <- maxo[!is.na(maxo$Solar.R)]
ridna <- maxo$Solar.R[!is.na(maxo)]
ridna
max(ridna)
ridna
maxo
max(maxo$Solar.R)
max(!is.na(maxo$Solar.R))
clear
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
ozone
ozoneClean
data <- dataset(ozoneClean$Solar.R, Month == 5)
data <- dataset(ozoneClean, Month == 5)
data <- dataset(ozone, Month == 5)
data <- subset(ozoneClean$Solar.R, Month == 5)
str(ozoneClean)
str(ozoneClean$Month)
data <- subset(ozoneClean, Month == 5)
data
data$Solar.R
max(data$Solar.R)
max(data$Ozone)
x <- 1:4
y <- 2:3
x + y
class(x+y)
f <- x + y
class(f)
x <- c(3, 5, 1, 10, 12, 6)
x[x < 6] == 0
x
x[x >= 6] <- 0
x
x <- c(3, 5, 1, 10, 12, 6)
x
x[x %in% 1:5] <- 0
x
head(ozone, 2)
str(ozone)
nrows(ozone)
nrow(ozone)
tail(ozone, 2)
ozone[[47]]
ozone[47]
ozone$Ozone[47]
sum(!is.na(ozone$Ozone))
sum(ozoneClean$Ozone)
notin <- !is.na(ozone$Ozone)
natin
notin
sum(which(notin == T))
notin <- ozone[!is.na(ozone$Ozone)]
which(!is.na(ozone$Ozone) == T)
sum(which(!is.na(ozone$Ozone) == T))
notin <- ozone[!is.na(ozone$Ozone)]
notin <- !is.na(ozone, ozone$Ozone)
notin <- !is.na(ozone["Ozone"])
notin
notin <- !is.na(ozone[,"Ozone"])
notin
sum(notin)
notin <- sum(is.na(ozone["Ozone"]))
notin
notin <- sum(is.na(ozone$Ozone))
notin
mean(ozoneClean$Ozone)
temp <- subset(ozoneClean, Ozone > 31 & Temp > 90)
temp
mean(temp$Solar.R)
lapply(ozoneClean, function(x){ mean(subset(ozoneClean, Month == 5)) })
mean(ozoneClean, subset(ozoneClean$Temp, Month == 5)
)
montheq <- subset(ozoneClean, Month == 5)
montheq
mean(montheq$Temp)
montheq <- subset(ozone, Month == 5)
mean(montheq$Temp)
montheq <- subset(ozone, Month == 6)
mean(montheq$Temp)
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
add2 <- function(x,y) {
x+y
}
add2(3,5)
above <- function(x,n) {
use <- x > n
x[use]
}
x <- 1:20
above(x , 12)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean[y[,i]]
}
# last expression will return automagically!
means
}
data
ozone
ncol(ozone)
numeric(ozone)
means <- numeric(ncal(ozone))
means <- numeric(ncol(ozone))
means
mean[ozone]
ozone
mean[ozone[1]]
mean[ozone[,1]]
mean[ozone[[], na.rm = T]
mean[ozone[[,], na.rm = T]
mean[ozone[[,1], na.rm = T]
mean[ozone[[,0], na.rm = T]
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean[y[,i], na.rm = removeNA]
}
# last expression will return automagically!
means
}
columnmean(ozone)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i], na.rm = removeNA)
}
# last expression will return automagically!
means
}
columnmean(ozone)
means
sum(means)
mean(ozone[], na.rm = T)
mean(ozone[,], na.rm = T)
mean(ozone[,1], na.rm = T)
mean(ozone[,2], na.rm = T)
mean(ozone[1,], na.rm = T)
mean(ozone[1,1], na.rm = T)
mean(ozone[1,2], na.rm = T)
mean(ozone[2,1], na.rm = T)
ozone
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
source('~/Documents/coursera/datasciencecoursera/rprogramming/quiz1/quiz1.R')
pollutantmean <- function(directory, pollutant, id = 1:332) {
data <- numeric()
for (d in id) {
readCSV <- read.csv(paste(directory, "/", formatC(d, width <- 3, flag <- "0"), ".csv", sep = ""))
data <- c(data, readCSV[[pollutant]])
}
mean(data, na.rm = TRUE)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
data <- numeric()
for (d in id) {
readCSV <- read.csv(paste(directory, "/", formatC(d, width = 3, flag = "0"), ".csv", sep = ""))
data <- c(data, readCSV[[pollutant]])
}
mean(data, na.rm = TRUE)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
data <- numeric()
for (d in id) {
readCSV <- read.csv(paste(directory, "/", formatC(d, width = 3, flag = "0"), ".csv", sep = ""))
data <- c(data, readCSV[[pollutant]])
}
mean(data, na.rm = TRUE)
}
pollutantmean("specdata", "sulfate", 1:10)
