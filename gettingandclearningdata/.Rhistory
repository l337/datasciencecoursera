R.version.string
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
install_from_swirl("Getting and Cleaning Data")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 & r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size+1000)
summarize(cran, avg_bytes = mean(size))
if(!file.exists("data")) { dir.create("data") }
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileURL, destfile="./data/idahohousing.csv", method="curl")
list.files("./data")
if(!file.exists("data")) { dir.create("data") }
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileURL, destfile="./data/idahohousing.csv", method="curl")
list.files("./data")
dateDownloaded <- date()
dateDownloaded
housingData <- read.csv("./data/idahohousing.csv")
head(housingData)
housingData <- read.csv("./data/idahohousing.csv")
questionOne <- filter(housingData, VAL >= 1,000,000)
library(dplyr)
housingData <- read.csv("./data/idahohousing.csv")
data <- tbl_df(housingData)
questionOne <- filter(data, VAL >= 1,000,000)
library(dplyr)
housingData <- read.csv("./data/idahohousing.csv")
data <- tbl_df(housingData)
data
library(dplyr)
housingData <- read.csv("./data/idahohousing.csv")
data <- tbl_df(housingData)
questionOne <- filter(data, VAL >= 1000000)
library(dplyr)
housingData <- read.csv("./data/idahohousing.csv")
data <- tbl_df(housingData)
questionOne <- filter(data, VAL >= 1000000)
questionOne
library(dplyr)
housingData <- read.csv("./data/idahohousing.csv")
data <- tbl_df(housingData)
questionOne <- filter(data, !is.na(VAL >= 1000000))
questionOne
library(dplyr)
housingData <- read.csv("./data/idahohousing.csv")
data <- tbl_df(housingData)
questionOne <- filter(data, !is.na(VAL >= 1000000))
nrows(questionOne)
library(dplyr)
housingData <- read.csv("./data/idahohousing.csv")
data <- tbl_df(housingData)
questionOne <- filter(data, !is.na(VAL >= 1000000))
nrow(questionOne)
if(!file.exists("data")) { dir.create("data") }
library(dplyr)
housingData <- read.csv("./data/idahohousing.csv")
data <- tbl_df(housingData)
questionOne <- select(data, !is.na(VAL))
nrow(questionOne)
library(dplyr)
housingData <- read.csv("./data/idahohousing.csv")
data <- tbl_df(housingData)
questionOne <- select(data, !is.na(VAL))
questionOne
library(dplyr)
housingData <- read.csv("./data/idahohousing.csv")
data <- tbl_df(housingData)
questionOne <- select(data, VAL)
questionOne
library(dplyr)
housingData <- read.csv("./data/idahohousing.csv")
data <- tbl_df(housingData)
propertyValues <- select(data, VAL)
questionOne <- filter(propertyValues, !is.na(propertyValues >= 1000000))
questionOne
library(dplyr)
housingData <- read.csv("./data/idahohousing.csv")
data <- tbl_df(housingData)
propertyValues <- select(data, VAL)
questionOne <- filter(propertyValues, !is.na(VAL >= 1000000))
questionOne
library(dplyr)
housingData <- read.csv("./data/idahohousing.csv")
data <- tbl_df(housingData)
propertyValues <- select(data, VAL)
questionOne <- filter(propertyValues, !is.na(VAL >= 1000000))
questionOne
library(dplyr)
housingData <- read.csv("./data/idahohousing.csv")
data <- tbl_df(housingData)
propertyValues <- select(data, VAL)
questionOne <- filter(propertyValues, !is.na(VAL >= 10))
questionOne
library(dplyr)
housingData <- read.csv("./data/idahohousing.csv")
data <- tbl_df(housingData)
propertyValues <- select(data, !is.na(VAL))
questionOne <- filter(propertyValues, VAL >= 10)
questionOne
library(dplyr)
housingData <- read.csv("./data/idahohousing.csv")
data <- tbl_df(housingData)
propertyValues <- select(data, !is.na(VAL))
questionOne <- filter(propertyValues, VAL >= 100)
questionOne
if(!file.exists("data")) { dir.create("data") }
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileURL, destfile="./data/idahohousing.csv", method="curl")
list.files("./data")
dateDownloaded <- date()
dateDownloaded
library(dplyr)
housingData <- read.csv("./data/idahohousing.csv")
data <- tbl_df(housingData)
propertyValues <- select(data, !is.na(VAL))
questionOne <- filter(propertyValues, VAL >= 24)
questionOne
library(dplyr)
housingData <- read.csv("./data/idahohousing.csv")
data <- tbl_df(housingData)
propertyValues <- select(data, !is.na(VAL))
questionOne <- filter(propertyValues, VAL >= 24)
nrow(questionOne)
file2URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(file2URL, destfile="./data/naturalGasAquisitionProgram.xlsx", method="curl")
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
?n
?n_distinct
submit()
pack_sum
quantile(pack_sum$count, probs=0.99)
filter(pack_sum, count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
head(top_counts, 20)
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs=0.99)
top_unique <- filter(pack_sum, unique > 465)
top_unique
arrange(top_unique, desc(unique))
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
exit()
q()
?help
quit
separate(res, sex_class, c("sex", "class"))
exit()
swirl
exit()
exit
exit()
quit
swirl
swirlq
library(tidyr)
library(tidyr)
exit
bye()
library(tidyr)
install.packages("tidyr")
install.packages("tidyr")
swirl()
swirl
swirl()
swirl()
library(swirl)
swirl()
linrary(tidyr)
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
ldd -d
bye()
install.packages("stringi")
swirl()
separate(res, sex_class, c("sex", "class"))
submit()
submit()
students3
submit()
?spread
submit()
submit()
submit()
submit()
extract_numeric("class5")
submit()
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
mutate(passed, status="passed")
passed <- passed %>% mutate(status="passed")
failed <- failed %>% mutate(status="failed")
rbind_list(passed, failed)
sat
submit()
submit()
bye()
swirl()
bye()
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
this_day.year()
year(this_day)
wday(this_day)
wday(this_day, label=T)
wday(this_day, label=TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12 1975")
ymd("25081985")
day("25081985")
dmy(25081985)
ymd("192012")
ymd(//"192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours=8, minutes=34, seconds=55)
this_moment
this_moment <- update(now())
this_moment <- update(this_moment, hours=10, minutes=16, seconds=0)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
update(depart, hours=17, minutes=34)
depart <- update(depart, hours=17, minutes=34)
depart
arrive <- depart + hours(15)
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17 2008", tz = "Singapore")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- set_interval(last_time, arrive)
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
library(xlsx)
gasData <- read.xlsx("./data/naturalGasAquisitionProgram.xlsx")
head(gasData)
install.packages(xlsx)
library(xlsx)
install.packages("xlsx")
library(xlsx)
gasData <- read.xlsx("./data/naturalGasAquisitionProgram.xlsx")
head(gasData)
gasData <- read.xlsx("./data/naturalGasAquisitionProgram.xlsx", sheetIndex=1)
head(gasData)
gasData <- read.xlsx("./data/naturalGasAquisitionProgram.xlsx", sheetIndex=1, colIndex=7:1, rowIndex=18:23)
head(gasData)
dat <- read.xlsx("./data/naturalGasAquisitionProgram.xlsx", sheetIndex=1, colIndex=7:1, rowIndex=18:23)
head(dat)
dat <- read.xlsx("./data/naturalGasAquisitionProgram.xlsx", sheetIndex=1, colIndex=7:1, rowIndex=18:23)
sum(dat$Zip*dat$Ext, na.rm=T)
dat <- read.xlsx("./data/naturalGasAquisitionProgram.xlsx", sheetIndex=1, colIndex=7:15, rowIndex=18:23)
dat
dat <- read.xlsx("./data/naturalGasAquisitionProgram.xlsx", sheetIndex=1, colIndex=7:15, rowIndex=18:23)
sum(dat$Zip*dat$Ext, na.rm=T)
file3URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
library(XML)
doc <- xmlTreeParse(file3URL, useInternal=T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
install.packages("XML")
install.packages("XML")
file3URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
library(XML)
doc <- xmlTreeParse(file3URL, useInternal=T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
