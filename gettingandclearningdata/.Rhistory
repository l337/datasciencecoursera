separate(res, sex_class, c("sex", "class"))
exit()
swirl
exit()
exit
exit()
quit
swirl
swirlq
library(tidyr)
library(tidyr)
exit
bye()
library(tidyr)
install.packages("tidyr")
install.packages("tidyr")
swirl()
swirl
swirl()
swirl()
library(swirl)
swirl()
linrary(tidyr)
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
ldd -d
bye()
install.packages("stringi")
swirl()
separate(res, sex_class, c("sex", "class"))
submit()
submit()
students3
submit()
?spread
submit()
submit()
submit()
submit()
extract_numeric("class5")
submit()
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
mutate(passed, status="passed")
passed <- passed %>% mutate(status="passed")
failed <- failed %>% mutate(status="failed")
rbind_list(passed, failed)
sat
submit()
submit()
bye()
swirl()
bye()
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
this_day.year()
year(this_day)
wday(this_day)
wday(this_day, label=T)
wday(this_day, label=TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12 1975")
ymd("25081985")
day("25081985")
dmy(25081985)
ymd("192012")
ymd(//"192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours=8, minutes=34, seconds=55)
this_moment
this_moment <- update(now())
this_moment <- update(this_moment, hours=10, minutes=16, seconds=0)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
update(depart, hours=17, minutes=34)
depart <- update(depart, hours=17, minutes=34)
depart
arrive <- depart + hours(15)
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17 2008", tz = "Singapore")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- set_interval(last_time, arrive)
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
library(xlsx)
gasData <- read.xlsx("./data/naturalGasAquisitionProgram.xlsx")
head(gasData)
install.packages(xlsx)
library(xlsx)
install.packages("xlsx")
library(xlsx)
gasData <- read.xlsx("./data/naturalGasAquisitionProgram.xlsx")
head(gasData)
gasData <- read.xlsx("./data/naturalGasAquisitionProgram.xlsx", sheetIndex=1)
head(gasData)
gasData <- read.xlsx("./data/naturalGasAquisitionProgram.xlsx", sheetIndex=1, colIndex=7:1, rowIndex=18:23)
head(gasData)
dat <- read.xlsx("./data/naturalGasAquisitionProgram.xlsx", sheetIndex=1, colIndex=7:1, rowIndex=18:23)
head(dat)
dat <- read.xlsx("./data/naturalGasAquisitionProgram.xlsx", sheetIndex=1, colIndex=7:1, rowIndex=18:23)
sum(dat$Zip*dat$Ext, na.rm=T)
dat <- read.xlsx("./data/naturalGasAquisitionProgram.xlsx", sheetIndex=1, colIndex=7:15, rowIndex=18:23)
dat
dat <- read.xlsx("./data/naturalGasAquisitionProgram.xlsx", sheetIndex=1, colIndex=7:15, rowIndex=18:23)
sum(dat$Zip*dat$Ext, na.rm=T)
file3URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
library(XML)
doc <- xmlTreeParse(file3URL, useInternal=T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
install.packages("XML")
install.packages("XML")
file3URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
library(XML)
doc <- xmlTreeParse(file3URL, useInternal=T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
file3URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
library(XML)
doc <- xmlTreeParse(file3URL, useInternal=T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
fileXmlURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
library(XML)
doc <- xmlTreeParse(fileXmlURL, useInternal=T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
install.packages("XML")
install.packages("XML")
fileXmlURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
library(XML)
doc <- xmlTreeParse(fileXmlURL, useInternal=T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
fileXmlURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
library(XML)
doc <- xmlTreeParse(fileXmlURL, useInternal=T)
fileXmlURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
# Have to download the file to bypass https, instead of removing the s:
download.file(fileXmlURL, destfile="./data/restaurants.xml", curl=T, ssl.verifypeer = FALSE)
# Question Four: extracting data from XML
fileXmlURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
# Have to download the file to bypass https, instead of removing the s:
download.file(fileXmlURL, destfile="./data/restaurants.xml", method="curl", ssl.verifypeer = FALSE)
fileXmlURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
# Have to download the file to bypass https, instead of removing the s:
getURL(fileXmlURL, destfile="./data/restaurants.xml", method="curl", ssl.verifypeer = FALSE)
library(RCurl)
library(XML)
# bypassing https, instead of removing the s:
fileXmlURL <- getURL("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", ssl.verifypeer = FALSE)
library(RCurl)
library(XML)
# bypassing https, instead of removing the s:
fileXmlURL <- getURL("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", ssl.verifypeer = FALSE)
doc <- xmlTreeParse(fileXmlURL, useInternal=T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
doc
library(RCurl)
library(XML)
# bypassing https, instead of removing the s:
fileXmlURL <- getURL("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", ssl.verifypeer = FALSE)
doc <- xmlTreeParse(fileXmlURL, useInternal=T)
rootNode <- xmlRoot(doc)
zipcodes <- xpathSApply(rootNode, "//zipcode", xmlValue)
zipcodes
zipcodes[names(zipcodes) == 21231]
sum(zipcodes == 21231)
?fread
??fread
library(data.table)
install.packages("data.table")
library(data.table)
DT <- data.table(housingData)
housingData
library(data.table)
DT <- data.table(housingData)
library(data.table)
DT <- data.table(fread(housingData))
library(data.table)
DT <- data.table(fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"))
library(data.table)
temp <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
data <- fread(temp)
DT <- data.table(data)
library(data.table)
temp <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
data <- fread(temp)
DT <- data.table(data)
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
library(data.table)
temp <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
data <- fread(temp)
DT <- data.table(data)
system.time(mean(DT[DT$SEX==1,]$pwgtp15) mean(DT[DT$SEX==2,]$pwgtp15))
library(data.table)
temp <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
data <- fread(temp)
DT <- data.table(data)
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
library(data.table)
temp <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
data <- fread(temp)
DT <- data.table(data)
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
library(data.table)
data <- fread(housingData)
DT <- data.table(data)
housingData <- read.csv("./data/idahohousing.csv")
library(data.table)
data <- fread(housingData)
DT <- data.table(data)
library(data.table)
data <- fread("./data/idahohousing.csv")
DT <- data.table(data)
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
library(data.table)
DT <- fread("./data/idahohousing.csv")
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
library(data.table)
temp <- fread("./data/idahohousing.csv")
DT <- data.table(temp)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
library(data.table)
temp <- fread("./data/idahohousing.csv")
DT <- data.table(temp)
DT
library(data.table)
DT <- fread("./data/idahohousing.csv")
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
?data.table
?fread
library(data.table)
temp <- fread("./data/idahohousing.csv")
DT <- data.table(temp)
DT$pwgtp15
temp$pwgtp15
library(data.table)
temp <- fread("./data/idahohousing.csv")
DT <- data.table(temp)
DT
library(data.table)
DT <- fread("./data/idahohousing.csv")
DT$pwgtp15
library(data.table)
DT <- fread("./data/idahohousing.csv")
DT$pwgtp15
library(data.table)
DT <- fread("./data/idahohousing.csv")
DT
library(data.table)
DT <- fread("./data/idahohousing.csv")
DT$wgtp15
library(data.table)
DT <- fread("./data/idahohousing.csv")
system.time(sapply(split(DT$wgtp15,DT$SEX),mean))
library(data.table)
fileCsvURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileCsvURL, destfile="./data/idahohousing.csv", method="curl")
DT <- fread("./data/idahohousing.csv")
DT$pwgtp15
DT
library(data.table)
fileCsvURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv "
download.file(fileCsvURL, destfile="./data/idahohousing.csv", method="curl")
DT <- fread("./data/idahohousing.csv")
DT
if(!file.exists("data")) { dir.create("data") }
library(dplyr)
fileCsvURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileCsvURL, destfile="./data/idahohousing.csv", method="curl")
dateDownloaded <- date()
dateDownloaded
housingData <- read.csv("./data/idahohousing.csv")
data <- tbl_df(housingData)
propertyValues <- select(data, !is.na(VAL))
questionOne <- filter(propertyValues, VAL >= 24) #24. 1,000,000+ Net Value on house
nrow(questionOne)
library(data.table)
fileCsvURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileCsvURL, destfile="./data/newidahohousing.csv", method="curl")
DT <- fread("./data/newidahohousing.csv")
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
DT <- fread("./data/newidahohousing.csv")
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
DT <- fread("./data/newidahohousing.csv")
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
DT <- fread("./data/newidahohousing.csv")
system.time(DT[,mean(pwgtp15),by=SEX])
DT <- fread("./data/newidahohousing.csv")
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
DT <- fread("./data/newidahohousing.csv")
system.time(rowMeans(DT)[DT$SEX==2])
DT <- fread("./data/newidahohousing.csv")
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
temp <- fread("./data/newidahohousing.csv")
DT <- write.table(temp)
temp <- fread("./data/newidahohousing.csv")
DT <- data.table(temp)
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(rowMeans(DT)[DT$SEX==1]])
system.time(rowMeans(DT)[DT$SEX==1])
temp <- fread("./data/newidahohousing.csv")
DT <- data.table(temp)
system.time(rowMeans(DT)[DT$SEX==1])
system.time(rowMeans(DT)[DT$SEX==2])
library(data.table)
fileCsvURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileCsvURL, destfile="./data/newidahohousing.csv", method="curl")
temp <- fread("./data/newidahohousing.csv")
DT <- data.table(temp)
# Different ways to calculate the average value
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(rowMeans(DT)[DT$SEX==1])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
# END Question Five
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(rowMeans(DT)[DT$SEX==1])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX]) #***
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
library(data.table)
fileCsvURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileCsvURL, destfile="./data/newidahohousing.csv", method="curl")
temp <- fread("./data/newidahohousing.csv")
DT <- data.table(temp)
resultSample <- 1000
for (i in 1:resultSample) {
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
}
for (i in 1:resultSample) {
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
}
resultSample <- 100
for (i in 1:resultSample) {
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
}
resultSample <- 100
for (i in 1:resultSample) {
test1 <- system.time(mean(DT[DT$SEX==1,]$pwgtp15))
}
test1
resultSample <- 100
for (i in 1:resultSample) {
test1 <- system.time(mean(DT[DT$SEX==1,]$pwgtp15))
test2 <- system.time(mean(DT$pwgtp15,by=DT$SEX))
}
test1
test2
resultSample <- 100
for (i in 1:resultSample) {
test1 <- system.time(mean(DT[DT$SEX==1,]$pwgtp15))
test2 <- system.time(mean(DT$pwgtp15,by=DT$SEX))
test3 <- system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
}
test1
test2
test3
resultSample <- 100
for (i in 1:resultSample) {
test1 <- system.time(mean(DT[DT$SEX==1,]$pwgtp15))
test2 <- system.time(mean(DT$pwgtp15,by=DT$SEX))
test3 <- system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
test4 <- system.time(DT[,mean(pwgtp15),by=SEX])
test5 <- system.time(tapply(DT$pwgtp15,DT$SEX,mean))
}
test1
test2
test3
test4
test5
resultSample <- 100
for (i in 1:resultSample) {
test1 <- system.time(mean(DT[DT$SEX==1,]$pwgtp15))
test2 <- system.time(mean(DT$pwgtp15,by=DT$SEX))
test3 <- system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
test4 <- system.time(DT[,mean(pwgtp15),by=SEX])
test5 <- system.time(tapply(DT$pwgtp15,DT$SEX,mean))
}
test1
test2
test3
test4
test5
temp <- fread("./data/newidahohousing.csv")
DT <- data.table(temp)
resultSample <- 100
for (i in 1:resultSample) {
test1 <- system.time(mean(DT[DT$SEX==1,]$pwgtp15))
test2 <- system.time(mean(DT$pwgtp15,by=DT$SEX))
test3 <- system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
test4 <- system.time(DT[,mean(pwgtp15),by=SEX])
test5 <- system.time(tapply(DT$pwgtp15,DT$SEX,mean))
}
test1
test2
test3
test4
test5
resultSample <- 1000
test1 <- system.time(replicate(resultSample, { mean(DT[DT$SEX==1,]$pwgtp15 })))
test1
test1 <- system.time(replicate(resultSample, { mean(DT[DT$SEX==1,]$pwgtp15) }))
test1
test2 <- system.time(replicate(resultSample, { mean(DT$pwgtp15,by=DT$SEX) }))
test2
test3 <- system.time(replicate(resultSample, { sapply(split(DT$pwgtp15,DT$SEX),mean) }))
test3
test4 <- system.time(replicate(resultSample, { DT[,mean(pwgtp15),by=SEX] }))
test4
resultSample <- 500
test1 <- system.time(replicate(resultSample, { mean(DT[DT$SEX==1,]$pwgtp15) }))
test1
test4 <- system.time(replicate(resultSample, { DT[,mean(pwgtp15),by=SEX] }))
test4
test4 <- system.time(replicate(resultSample, { DT[,mean(pwgtp15),by=SEX] }))
test4 <- system.time(replicate(resultSample, { mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15) }))
test4
test4 <- system.time(replicate(resultSample, { DT[,mean(pwgtp15),by=SEX] }))
test4
resultSample <- 500
test1 <- system.time(replicate(resultSample, { mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15) }))
test1
test2 <- system.time(replicate(resultSample, { mean(DT$pwgtp15,by=DT$SEX) }))
test2
test3 <- system.time(replicate(resultSample, { sapply(split(DT$pwgtp15,DT$SEX),mean) }))
test3
test4 <- system.time(replicate(resultSample, { DT[,mean(pwgtp15),by=SEX] }))
test4
test4 <- system.time(replicate(resultSample, { DT[,mean(DT$pwgtp15),by=DT$SEX] }))
test4
test4 <- system.time(replicate(resultSample, { DT[,mean(DT$pwgtp15),by=DT$SEX] }))
test4
test4 <- system.time(replicate(resultSample, { DT[,mean(pwgtp15),by=SEX] }))
test4
install.packages("RMySQL")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httpuv")
